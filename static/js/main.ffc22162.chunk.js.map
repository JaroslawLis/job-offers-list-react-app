{"version":3,"sources":["components/AddOffer.js","components/MainTable.js","components/Navigation.js","components/Edit.js","components/Update.js","components/ShowFirm.js","components/Stats.js","components/Copy.js","components/templateData.js","App.js","serviceWorker.js","index.js"],"names":["AddOffer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","firmList","JSON","parse","localStorage","getItem","handleChange","e","console","log","target","name","type","setState","defineProperty","value","handleSubmit","preventDefault","data","objectSpread","state","writeFirm","firm","address","phone","email","www","jobAdvertisement","jobAdvertisementLink","queryDate","CVDate","notices","react_default","a","createElement","data-aos","className","onSubmit","onChange","placeholder","Component","MainTable","text","_this2","map","offer","i","data-aos-easing","data-aos-delay","data-aos-once","data-aos-offset","key","href","rel","onClick","handleRemoveButton","react_router_dom","to","concat","Navigtation","Edit","editFirm","match","params","id","history","push","stateX","Update","replayDate","interviewDate","recrutationNotices","ShowFirm","Stats","all_apl","filter","item","wo","length","toFixed","woe","Copy","copyList","templateData","App","formActive","handleCopy","toConsumableArray","setItem","stringify","handleButton","handleEditButton","react_router","from","path","component","index","window","confirm","splice","AOS","init","duration","Navigation","exact","render","components_MainTable","components_AddOffer","components_Edit","assign","components_Update","components_ShowFirm","components_Stats","components_Copy","Boolean","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ffc22162.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./addOffer.css\";\r\n\r\nclass AddOffer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firm: \"\",\r\n      address: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      www: \"\",\r\n      jobAdvertisement: \"\",\r\n      jobAdvertisementLink: \"\",\r\n      queryDate: \"\",\r\n      CVDate: \"\",\r\n      notices: \"\"\r\n    };\r\n  }\r\n\r\n  firmList = JSON.parse(localStorage.getItem(\"savedFirmList\")) || [];\r\n\r\n  handleChange = e => {\r\n    console.log(e.target.name);\r\n    if (e.target.type === \"textarea\") {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      ...this.state\r\n    };\r\n    this.props.writeFirm(data);\r\n    // this.firmList.push(data);\r\n    // console.log(this.firmList);\r\n    // localStorage.setItem(\"savedFirmList\", JSON.stringify(this.firmList));\r\n\r\n    this.setState({\r\n      firm: \"\",\r\n      address: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      www: \"\",\r\n      jobAdvertisement: \"\",\r\n      jobAdvertisementLink: \"\",\r\n      queryDate: \"\",\r\n      CVDate: \"\",\r\n      notices: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <div data-aos=\"flip-left\">\r\n        <form className=\"add_firm\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Podaj nazwę firmy{\" \"}\r\n            <input\r\n              name=\"firm\"\r\n              value={this.state.firm}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Nazwa Firmy\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj adres{\" \"}\r\n            <input\r\n              name=\"address\"\r\n              value={this.state.address}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Adres\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj telefon{\" \"}\r\n            <input\r\n              name=\"phone\"\r\n              value={this.state.phone}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Telefon\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj e - mail{\" \"}\r\n            <input\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"email\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj stronę www{\" \"}\r\n            <input\r\n              name=\"www\"\r\n              value={this.state.www}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Strona internetowa\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj treść ogłoszenia{\" \"}\r\n            <textarea\r\n              name=\"jobAdvertisement\"\r\n              value={this.state.jobAdvertisement}\r\n              onChange={this.handleChange}\r\n            />{\" \"}\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj link do ogłoszenia{\" \"}\r\n            <input\r\n              name=\"jobAdvertisementLink\"\r\n              value={this.state.jobAdvertisementLink}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Strona internetowa\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Data wysłania zapytania{\" \"}\r\n            <input\r\n              name=\"queryDate\"\r\n              value={this.state.queryDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Data wysłania CV{\" \"}\r\n            <input\r\n              name=\"CVDate\"\r\n              value={this.state.CVDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Uwagi{\" \"}\r\n            <textarea\r\n              name=\"notices\"\r\n              value={this.state.notices}\r\n              onChange={this.handleChange}\r\n            />{\" \"}\r\n          </label>{\" \"}\r\n          <button type=\"submit\"> Dodaj firmę </button>{\" \"}\r\n        </form>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddOffer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./mainTable.css\";\r\n\r\nclass MainTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: props.text\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data.map((offer, i) => (\r\n      <div\r\n        className=\"row\"\r\n        data-aos=\"flip-left\"\r\n        data-aos-easing=\"ease-out-cubic\"\r\n        data-aos-delay=\"500\"\r\n        data-aos-once=\"true\"\r\n        data-aos-offset=\"0\"\r\n        key={i}\r\n      >\r\n        <div>{offer.firm}</div>\r\n        <div>\r\n          <a href={offer.www} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {offer.www}\r\n          </a>\r\n        </div>\r\n        <div>e-mail</div>\r\n        <div>{offer.queryDate}</div>\r\n        <div>{offer.CVDate}</div>\r\n        <div>\r\n          <button onClick={() => this.props.handleRemoveButton(i)}>Usuń</button>\r\n        </div>\r\n        <div className=\"divAsButton\">\r\n          <Link to={`/edit/${i}`}>edycja</Link>\r\n        </div>\r\n        <div className=\"divAsButton\">\r\n          <Link to={`/update/${i}`}>aktualizacja</Link>\r\n        </div>\r\n        <div className=\"showFirm\">\r\n          <Link to={`/showFirm/${i}`}>+</Link>\r\n        </div>\r\n      </div>\r\n    ));\r\n    return (\r\n      <div className=\"mainTable\" data-aos=\"fade-up\">\r\n        <h2> Lista ofert </h2>{\" \"}\r\n        <div className=\"offerList\">\r\n          <div className=\"row title\">\r\n            <div>Nazwa Firmy</div>\r\n            <div>Strona WWW</div>\r\n            <div>E-mail</div>\r\n            <div>Zapytanie</div>\r\n            <div>CV</div>\r\n          </div>\r\n          {data}{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainTable;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./navigation.css\";\r\n\r\nconst Navigtation = () => {\r\n  return (\r\n    <header>\r\n      <h4>Looking for a Job </h4>\r\n      <NavLink to=\"/\"> Strona główna </NavLink>{\" \"}\r\n      <NavLink to=\"/add\"> Dodaj firmę </NavLink>{\" \"}\r\n      <NavLink to=\"/info\"> Info </NavLink>{\" \"}\r\n      <NavLink to=\"/stats\"> Statystyka </NavLink>{\" \"}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navigtation;\r\n","import React, { Component } from \"react\";\r\nimport \"./edit.css\";\r\nclass Edit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.props.stateX.firmList[this.props.match.params.id];\r\n  }\r\n  handleChange = e => {\r\n    if (e.target.type === \"textarea\") {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.editFirm(this.state, this.props.match.params.id);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.props);\r\n    return (\r\n      <div data-aos=\"flip-down\">\r\n        <form className=\"edit_firm\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Podaj nazwę firmy{\" \"}\r\n            <input\r\n              name=\"firm\"\r\n              value={this.state.firm}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Nazwa Firmy\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj adres{\" \"}\r\n            <input\r\n              name=\"address\"\r\n              value={this.state.address}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Adres\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj telefon{\" \"}\r\n            <input\r\n              name=\"phone\"\r\n              value={this.state.phone}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Telefon\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj e - mail{\" \"}\r\n            <input\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"email\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj stronę www{\" \"}\r\n            <input\r\n              name=\"www\"\r\n              value={this.state.www}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Strona internetowa\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj treść ogłoszenia{\" \"}\r\n            <textarea\r\n              name=\"jobAdvertisement\"\r\n              value={this.state.jobAdvertisement}\r\n              onChange={this.handleChange}\r\n            />{\" \"}\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj link do ogłoszenia{\" \"}\r\n            <input\r\n              name=\"jobAdvertisementLink\"\r\n              value={this.state.jobAdvertisementLink}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Strona internetowa\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Data wysłania zapytania{\" \"}\r\n            <input\r\n              name=\"queryDate\"\r\n              value={this.state.queryDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Data wysłania CV{\" \"}\r\n            <input\r\n              name=\"CVDate\"\r\n              value={this.state.CVDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Uwagi{\" \"}\r\n            <textarea\r\n              name=\"notices\"\r\n              value={this.state.notices}\r\n              onChange={this.handleChange}\r\n            />{\" \"}\r\n          </label>{\" \"}\r\n          <button type=\"submit\">Edytuj firmę </button>{\" \"}\r\n        </form>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./update.css\";\r\nclass Update extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.props.state.firmList[this.props.match.params.id];\r\n    if (!this.state.replayDate) {\r\n      this.state.replayDate = \"\";\r\n    }\r\n    if (!this.state.interviewDate) {\r\n      this.state.interviewDate = \"\";\r\n    }\r\n    if (!this.state.recrutationNotices) {\r\n      this.state.recrutationNotices = \"\";\r\n    }\r\n  }\r\n  handleChange = e => {\r\n    if (e.target.type === \"textarea\") {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.editFirm(this.state, this.props.match.params.id);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div data-aos=\"zoom-out\">\r\n        <h3>Aktualizacja firmy {this.state.firm}</h3>\r\n        <form className=\"update_firm\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Data odpowiedzi\r\n            <input\r\n              name=\"replayDate\"\r\n              value={this.state.replayDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Data rozmowy rekrutacyjnej\r\n            <input\r\n              name=\"interviewDate\"\r\n              value={this.state.interviewDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Uwagi dotyczące rekrutacji\r\n            <textarea\r\n              name=\"recrutationNotices\"\r\n              value={this.state.recrutationNotices}\r\n              onChange={this.handleChange}\r\n            />{\" \"}\r\n          </label>{\" \"}\r\n          <button type=\"submit\">Aktualizuj dane </button>{\" \"}\r\n        </form>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Update;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./showFirm.css\";\r\nclass ShowFirm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.props.state.firmList[this.props.match.params.id];\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    return (\r\n      <div data-aos=\"zoom-in\" className=\"showFirmInformation\">\r\n        <div>Nazwa Firmy</div>\r\n        <div>{this.state.firm}</div>\r\n        <div>Adres</div>\r\n        <div>{this.state.address}</div>\r\n        <div>Strona www</div>\r\n        <div>{this.state.www}</div>\r\n        <div>Telefon</div>\r\n        <div>{this.state.phone}</div>\r\n        <div>e-mail</div>\r\n        <div>{this.state.email}</div>\r\n        <div>link do ogłoszenia o pracę</div>\r\n        <div>{this.state.jobAdvertisementLink}</div>\r\n        <div>Ogłoszenie o pracę (treść)</div>\r\n        <div>\r\n          <pre>{this.state.jobAdvertisement}</pre>\r\n        </div>\r\n        <div>Data zapytania</div>\r\n        <div>{this.state.queryDate ? this.state.queryDate : \"brak danych\"}</div>\r\n        <div>Data wysłania CV</div>\r\n        <div>{this.state.CVDate ? this.state.CVDate : \"brak danych\"}</div>\r\n        <div>Data odpowiedzi</div>\r\n        <div>\r\n          {this.state.replayDate ? this.state.replayDate : \"brak danych\"}\r\n        </div>\r\n        <div>Data rozmowy o pracę</div>\r\n        <div>\r\n          {this.state.interviewDate ? this.state.interviewDate : \"brak danych\"}\r\n        </div>\r\n        <div>Notatki (treść)</div>\r\n        <div>\r\n          <pre>{this.state.notices}</pre>\r\n        </div>\r\n        <div>Notatki dotyczące rekrutacji (treść)</div>\r\n        <div>\r\n          <pre>{this.state.recrutationNotices}</pre>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowFirm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Stats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firmList: this.props.state.firmList\r\n    };\r\n  }\r\n  render() {\r\n    let all_apl = this.state.firmList.filter(\r\n      item => item.CVDate || item.queryDate\r\n    );\r\n    let response = this.state.firmList.filter(item => item.replayDate);\r\n    let wo = ((response.length / all_apl.length) * 100).toFixed(0);\r\n    let response_effective = this.state.firmList.filter(\r\n      item => item.interviewDate\r\n    );\r\n    let woe = ((response_effective.length / all_apl.length) * 100).toFixed(0);\r\n\r\n    return (\r\n      <div>\r\n        <h1>\r\n          {\" \"}\r\n          Wysłano {all_apl.length}\r\n          aplikacji / zapytań{\" \"}\r\n        </h1>{\" \"}\r\n        <h2> WO = {wo ? wo : 0} % </h2> <h2> WOE = {woe ? woe : 0} % </h2>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\n\r\nconst Copy = props => {\r\n  console.log(props);\r\n  return (\r\n    <div>\r\n      <h1>\r\n        {\" \"}\r\n        <button onClick={props.copyList}> Kopia </button>{\" \"}\r\n      </h1>{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Copy;\r\n","var templateData =\r\n    '[{\"firm\":\"Google\",\"address\":\"Sunnyvale, CA, USA\",\"phone\":\"\",\"email\":\"\",\"www\":\"https://careers.google.com/jobs/results/6441926003982336-software-engineer/?company=Google&company=Google%20Fiber&company=YouTube&employment_type=FULL_TIME&hl=en_US&jlo=en_US&q=&sort_by=relevance\",\"jobAdvertisement\":\"Minimum qualifications:\\\\n\\\\n    BS degree in Computer Science, similar technical field of study or equivalent practical experience.\\\\n    Software development experience in one or more general purpose programming languages.\\\\n    Experience working with two or more from the following: web application development, Unix/Linux environments, mobile application development, distributed and parallel systems, machine learning, information retrieval, natural language processing, networking, developing large software systems, and/or security software development.\\\\n    Working proficiency and communication skills in verbal and written English.\\\\n\\\\nPreferred qualifications:\\\\n\\\\n    Master’s, PhD degree, further education or experience in engineering, computer science or other technical related field.\\\\n    Experience with one or more general purpose programming languages including but not limited to: Java, C/C++, C#, Objective C, Python, JavaScript, or Go.\\\\n    Experience developing accessible technologies.\\\\n    Interest and ability to learn other coding languages as needed.\",\"jobAdvertisementLink\":\"\",\"queryDate\":\"\",\"CVDate\":\"2019-05-06\",\"notices\":\"\"},{\"firm\":\"Facebook\",\"address\":\"\",\"phone\":\"\",\"email\":\"accommodations-ext@fb.com\",\"www\":\"https://www.facebook.com\",\"jobAdvertisement\":\"RESPONSIBILITIES\\\\n\\\\n    Work with Product Designers to implement the next generation of Facebook products\\\\n    Build efficient and reusable front-end abstractions and systems\\\\n    Identify and address performance bottlenecks\\\\n    Participate in design and code reviews\\\\n    Interact with other team members to incorporate their innovations and vice versa\\\\n    Identify and communicate best practices for front-end engineering\\\\n\\\\nMINIMUM QUALIFICATIONS\\\\n\\\\n    Ability to write high-performance, reusable code for UI components\\\\n    Aware of but not reliant on Object Oriented Frameworks (Prototype JS, MooTools, Dojo, etc.)\\\\n    Experience developing rich applications with HTML/CSS/JS\\\\n    Pursuing a degree (Bachelors or Masters) in Computer Science or a related field\\\\n    Ability to obtain and maintain work authorization in the country of employment in 2019\\\\n    Must be currently enrolled in a full-time degree program and returning to the program after the completion of the internship\\\\n\\\\nPREFERRED QUALIFICATIONS\\\\n\\\\n    Passion for performance debugging and benchmarking\",\"jobAdvertisementLink\":\"https://www.facebook.com/careers/jobs/537099433476962/\",\"queryDate\":\"\",\"CVDate\":\"2019-05-06\",\"notices\":\"Facebook is committed to providing reasonable accommodations for qualified individuals with disabilities and disabled veterans in our job application procedures. If you need assistance or an accommodation due to a disability\",\"replayDate\":\"2019-05-06\",\"interviewDate\":\"\",\"recrutationNotices\":\"\"},{\"firm\":\"Sabre\",\"address\":\"Kraków, Wadowicka 6D\",\"phone\":\"\",\"email\":\"\",\"www\":\"\",\"jobAdvertisement\":\"\\\\n\\\\nWe are looking for forward-thinking, creative people who take ownership of results and make things happen. Is that you?\\\\n\\\\nThen come and join our software engineering team that works on a real product, has a great atmosphere and is full of experienced people that you can learn from.\\\\n\\\\n\\\\nDUTIES/RESPONSIBILITIES:\\\\n\\\\n    Under general direction, develops, codes, tests and debugs new complex software solutions or enhancements to existing software in a maintenance capacity.\\\\n    Designs and codes complex applications using advanced technology.\\\\n    Resolves customer complaints with software and responds to suggestions for improvements and enhancements.\\\\n    Creates new ideas in order to improve application performance and stability.\\\\n    Control quality of coding and implementation of implemented solutions.\\\\n\\\\n \\\\n\\\\nQUALIFICATIONS:\\\\n\\\\n‘Must have’ skills:\\\\n\\\\n    Good knowledge of C++ programming in UNIX/Linux environment\\\\n    Basic knowledge of database programming.\\\\n    Excellent problem solving and analytical skills.\\\\n    Good English communication skills, both written and verbal.\\\\n\\\\n ‘Nice to have’ skills:\\\\n\\\\n    2 years of commercial C++ experience\\\\n    Boost libraries, MPL, object-oriented design and design patterns.\\\\n    Java garbage collector performance and tuning.\\\\n    Knowledge and experience of UNIX shell and scripting languages as well as Git version control system\\\\n    Knowledge and experience of database design and connection optimizing.\\\\n    Web technologies, XML, XSLT, jQuery, AJAX.\\\\n    Good knowledge of plain Java is a plus\\\\n\\\\n\",\"jobAdvertisementLink\":\"https://crossweb.pl/job/oferty-pracy/sabre-c-software-engineer/\",\"queryDate\":\"\",\"CVDate\":\"2019-05-07\",\"notices\":\"\\\\n#LifeWorkBalance#HomeOffice#java#C++#pracakraków\\\\t\"},{\"firm\":\"Netcompany\",\"address\":\"Warszawa, ul. Puławska 182\",\"phone\":\"\",\"email\":\"\",\"www\":\"https://www.netcompany.com/pl\",\"jobAdvertisement\":\"BI Developer\\\\nFirma: Netcompany\\\\nTyp: backend\\\\nPoziom: regular\\\\nOdświeżono: 4 tygodnie temu\\\\nlokalizacja:\\\\nMiasto: Warszawa\\\\nMożliwa praca zdalna 100%: nie\\\\nformalności:\\\\nTyp umowy: umowa o pracę\\\\nWidełki: 8 000 - 14 000 zł brutto (umowa o pracę)\\\\nprojekty:\\\\nTyp projektów: projekty dla klientów\\\\nWykorzystywane technologie/narzędzia:\\\\nGłówne: MySQL, Microsoft SQL Server\\\\npraca:\\\\nWielkość zespołu: 6-8 os.\\\\nElastyczne godziny pracy: tak\\\\nOkazjonalna praca zdalna: tak\\\\nWymagane technologie/narzędzia:\\\\nOczekiwane:\\\\nSQL\\\\nExcel\\\\nMicrosoft SQL Server\\\\nR\\\\nPython\\\\ninne wymagania:\\\\nDoświadczenie: 2+\\\\nWykształcenie: wyższe techniczne\\\\nJęzyk obcy: angielski\\\\nPoziom: Wykorzystanie w pracy:\\\\nZastosowanie: czytanie dokumentacji, kontakt z klientem, zespół międzynarodowy,\\\\nProfity dla pracowników:\\\\nUbezpieczenie\\\\nAllianz lub Medicover\\\\nKarta Benefit Multisport\\\\nKursy językowe (duński, angielski)\\\\ncertyfikacje i wewnętrzna ścieżka szkoleniowa\\\\nKuchnia 1 duża + 4 małe kuchnie\\\\nKawa, napoje gorące, zimne dla pracowników\\\\nDarmowy dwudaniowy lunch, owoce, słodkości dla pracowników\\\\n2 imprezy firmowe w roku plus integracje w teamach i zajęcia sportowe\\\\nParking dla rowerów\\\\nAtrakcyjna lokalizacja przy metrze Wilanowska\\\\n\\\\nLots of responsibility right from the start\\\\n\\\\nAs a Consultant/Developer in the Information Management department, you’re going to deliver value to the projects from your every first day. We expect you to learn quickly and be responsible for your own deliverables from your first week. It requires a big drive to overcome such a steep learning curve, but you are not alone. You will work with some of the best consultants in the industry, who highly value knowledge sharing, feedback, and professional sparring.\\\\n\\\\nThe tasks are technical and analytical in the field of working with data. Examples might be:\\\\n\\\\n·         Collecting and structuring data from various sources.\\\\n\\\\n·         Implementing the business logic on data for use in data models.\\\\n\\\\n·         Building statistical models for advanced analyses.\\\\n\\\\nYour qualifications\\\\n\\\\n·         Professional experience within the fields of data modelling, ETL development, data warehouse architecture, data visualization, data analytics, and statistical modelling.\\\\n\\\\n·         Professional experience with project teamwork, business needs analysis, customer facing, etc.\\\\n\\\\n·         Higher education with a focus on IT or a technical / scientific education, which has given you a foundation to understand and manage complex data.\\\\n\\\\n·         Very good English skills both in writing and verbally\\\\n\\\\n·         Quality and result oriented.\\\\n\\\\nWe expect that you know, or you are willing to learn, the disciplines and tools that we use in our daily work:\\\\n\\\\n·         Database development Microsoft SQL Server, Oracle DB, or similar.\\\\n\\\\n·         ETL process development e.g. in Microsoft SQL Server Integration Services, Informatica, or similar.\\\\n\\\\n·         Data modelling e.g. in Microsoft SQL Server Analysis Services.\\\\n\\\\n·         Data visualization in PowerBI, Excel, Qlik, or similar.\\\\n\\\\n·         Data analytics and mathematical modelling of data e.g. using Azure Machine Learning, R, Python is also appreciated.\\\\n\",\"jobAdvertisementLink\":\"https://crossweb.pl/job/oferty-pracy/netcompany-bi-developer/\",\"queryDate\":\"\",\"CVDate\":\"2019-05-06\",\"notices\":\"Profity dla pracowników:\\\\nUbezpieczenie\\\\nAllianz lub Medicover\\\\nKarta Benefit Multisport\\\\nKursy językowe (duński, angielski)\\\\ncertyfikacje i wewnętrzna ścieżka szkoleniowa\\\\nKuchnia 1 duża + 4 małe kuchnie\\\\nKawa, napoje gorące, zimne dla pracowników\\\\nDarmowy dwudaniowy lunch, owoce, słodkości dla pracowników\\\\n2 imprezy firmowe w roku plus integracje w teamach i zajęcia sportowe\\\\nParking dla rowerów\\\\nAtrakcyjna lokalizacja przy metrze Wilanowska\",\"replayDate\":\"\",\"interviewDate\":\"2019-05-06\",\"recrutationNotices\":\"\"}]';\r\n\r\nexport default templateData;","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport AddOffer from \"./components/AddOffer\";\nimport MainTable from \"./components/MainTable\";\nimport Navigation from \"./components/Navigation\";\nimport Edit from \"./components/Edit\";\nimport Update from \"./components/Update\";\nimport ShowFirm from \"./components/ShowFirm\";\nimport Stats from \"./components/Stats\";\nimport Copy from \"./components/Copy\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport templateData from \"./components/templateData\";\n\nclass App extends Component {\n  state = {\n    formActive: false,\n    firmList:\n      JSON.parse(localStorage.getItem(\"savedFirmList\")) ||\n      JSON.parse(templateData)\n  };\n\n  handleCopy = () => {\n    let firmList = [...this.state.firmList];\n\n    localStorage.setItem(\"savedFirmListCopy\", JSON.stringify(firmList));\n  };\n  handleButton = () => {\n    this.setState({\n      formActive: !this.state.formActive\n    });\n  };\n  handleEditButton = i => {\n    return (\n      <Switch>\n        <Redirect from=\"/\" to=\"/new-path\" />\n        <Route path=\"/new-path\" component={AddOffer} />{\" \"}\n      </Switch>\n    );\n  };\n  handleRemoveButton = index => {\n    const firm = this.state.firmList[index].firm;\n\n    if (window.confirm(`czy usunąć firmę \\n${firm}`)) {\n      let firmList = [...this.state.firmList];\n\n      firmList.splice(index, 1);\n      localStorage.setItem(\"savedFirmList\", JSON.stringify(firmList));\n      this.setState({\n        firmList\n      });\n    }\n  };\n\n  writeFirm = data => {\n    let firmList = [...this.state.firmList];\n    firmList.push(data);\n\n    localStorage.setItem(\"savedFirmList\", JSON.stringify(firmList));\n    this.setState({\n      firmList\n    });\n  };\n  editFirm = (data, index) => {\n    let firmList = [...this.state.firmList];\n\n    firmList.splice(index, 1, data);\n\n    localStorage.setItem(\"savedFirmList\", JSON.stringify(firmList));\n    this.setState({\n      firmList\n    });\n  };\n\n  componentDidMount() {\n    AOS.init({\n      duration: 1500\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navigation />\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={() => (\n                <MainTable\n                  data={this.state.firmList}\n                  handleRemoveButton={this.handleRemoveButton}\n                  handleEditButton={this.handleEditButton}\n                />\n              )}\n            />{\" \"}\n            <Route\n              path=\"/add\"\n              exact\n              render={() => <AddOffer writeFirm={this.writeFirm} />}\n            />\n            <Route\n              path=\"/edit/:id\"\n              exact\n              render={props => (\n                <Edit {...props} stateX={this.state} editFirm={this.editFirm} />\n              )}\n            />\n            <Route\n              path=\"/update/:id\"\n              exact\n              render={props => (\n                <Update\n                  {...props}\n                  state={this.state}\n                  editFirm={this.editFirm}\n                />\n              )}\n            />\n            <Route\n              path=\"/showFirm/:id\"\n              exact\n              render={props => (\n                <ShowFirm\n                  {...props}\n                  state={this.state}\n                  editFirm={this.editFirm}\n                />\n              )}\n            />{\" \"}\n            <Route\n              path=\"/stats\"\n              exact\n              render={props => <Stats {...props} state={this.state} />}\n            />\n            <Route\n              path=\"/kopia\"\n              exact\n              render={props => <Copy {...props} copyList={this.handleCopy} />}\n            />\n            <Route\n              path=\"/\"\n              render={() => (\n                <MainTable\n                  data={this.state.firmList}\n                  handleRemoveButton={this.handleRemoveButton}\n                  handleEditButton={this.handleEditButton}\n                />\n              )}\n            />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}