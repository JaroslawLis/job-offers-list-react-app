{"version":3,"sources":["components/AddOffer.js","components/Edit.js","components/MainTable.js","components/Navigation.js","components/Update.js","components/Stats.js","App.js","serviceWorker.js","index.js"],"names":["AddOffer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","firmList","JSON","parse","localStorage","getItem","handleChange","e","console","log","target","name","type","setState","defineProperty","value","handleSubmit","preventDefault","data","objectSpread","state","writeFirm","firm","address","phone","email","www","jobAdvertisement","jobAdvertisementLink","queryDate","CVDate","notices","react_default","a","createElement","data-aos","className","onSubmit","onChange","placeholder","Component","Edit","editFirm","match","params","id","history","push","stateX","MainTable","text","_this2","map","offer","i","data-aos-easing","data-aos-delay","data-aos-once","data-aos-offset","key","href","rel","onClick","handleRemoveButton","react_router_dom","to","concat","Navigtation","Update","replayDate","interviewDate","recrutationNotices","Stats","all_apl","filter","item","wo","length","toFixed","woe","App","formActive","handleButton","handleEditButton","react_router","from","path","component","index","window","confirm","toConsumableArray","splice","setItem","stringify","AOS","init","duration","Navigation","exact","render","components_MainTable","components_AddOffer","components_Edit","assign","components_Update","components_Stats","Boolean","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d96ffdf8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./addOffer.css\";\r\n\r\nclass AddOffer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firm: \"\",\r\n      address: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      www: \"\",\r\n      jobAdvertisement: \"\",\r\n      jobAdvertisementLink: \"\",\r\n      queryDate: \"\",\r\n      CVDate: \"\",\r\n      notices: \"\"\r\n    };\r\n  }\r\n\r\n  firmList = JSON.parse(localStorage.getItem(\"savedFirmList\")) || [];\r\n\r\n  handleChange = e => {\r\n    console.log(e.target.name);\r\n    if (e.target.type === \"textarea\") {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = {\r\n      ...this.state\r\n    };\r\n    this.props.writeFirm(data);\r\n    // this.firmList.push(data);\r\n    // console.log(this.firmList);\r\n    // localStorage.setItem(\"savedFirmList\", JSON.stringify(this.firmList));\r\n\r\n    this.setState({\r\n      firm: \"\",\r\n      address: \"\",\r\n      phone: \"\",\r\n      email: \"\",\r\n      www: \"\",\r\n      jobAdvertisement: \"\",\r\n      jobAdvertisementLink: \"\",\r\n      queryDate: \"\",\r\n      CVDate: \"\",\r\n      notices: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log(this.props);\r\n    return (\r\n      <div data-aos=\"flip-left\">\r\n        <form className=\"add_firm\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Podaj nazwę firmy{\" \"}\r\n            <input\r\n              name=\"firm\"\r\n              value={this.state.firm}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Nazwa Firmy\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj adres{\" \"}\r\n            <input\r\n              name=\"address\"\r\n              value={this.state.address}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Adres\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj telefon{\" \"}\r\n            <input\r\n              name=\"phone\"\r\n              value={this.state.phone}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Telefon\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj e - mail{\" \"}\r\n            <input\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"email\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj stronę www{\" \"}\r\n            <input\r\n              name=\"www\"\r\n              value={this.state.www}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Strona internetowa\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj treść ogłoszenia{\" \"}\r\n            <textarea\r\n              name=\"jobAdvertisement\"\r\n              value={this.state.jobAdvertisement}\r\n              onChange={this.handleChange}\r\n            />{\" \"}\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj link do ogłoszenia{\" \"}\r\n            <input\r\n              name=\"jobAdvertisementLink\"\r\n              value={this.state.jobAdvertisementLink}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Strona internetowa\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Data wysłania zapytania{\" \"}\r\n            <input\r\n              name=\"queryDate\"\r\n              value={this.state.queryDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Data wysłania CV{\" \"}\r\n            <input\r\n              name=\"CVDate\"\r\n              value={this.state.CVDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Uwagi{\" \"}\r\n            <textarea\r\n              name=\"notices\"\r\n              value={this.state.notices}\r\n              onChange={this.handleChange}\r\n            />{\" \"}\r\n          </label>{\" \"}\r\n          <button type=\"submit\"> Dodaj firmę </button>{\" \"}\r\n        </form>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddOffer;\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"./edit.css\";\r\nclass Edit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.props.stateX.firmList[this.props.match.params.id];\r\n  }\r\n  handleChange = e => {\r\n    if (e.target.type === \"textarea\") {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    // console.log(this.state);\r\n    this.props.editFirm(this.state, this.props.match.params.id);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.props);\r\n    return (\r\n      <div data-aos=\"flip-down\">\r\n        <form className=\"edit_firm\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Podaj nazwę firmy{\" \"}\r\n            <input\r\n              name=\"firm\"\r\n              value={this.state.firm}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Nazwa Firmy\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj adres{\" \"}\r\n            <input\r\n              name=\"address\"\r\n              value={this.state.address}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Adres\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj telefon{\" \"}\r\n            <input\r\n              name=\"phone\"\r\n              value={this.state.phone}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Telefon\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj e - mail{\" \"}\r\n            <input\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"email\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj stronę www{\" \"}\r\n            <input\r\n              name=\"www\"\r\n              value={this.state.www}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Strona internetowa\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj treść ogłoszenia{\" \"}\r\n            <textarea\r\n              name=\"jobAdvertisement\"\r\n              value={this.state.jobAdvertisement}\r\n              onChange={this.handleChange}\r\n            />{\" \"}\r\n          </label>{\" \"}\r\n          <label>\r\n            Podaj link do ogłoszenia{\" \"}\r\n            <input\r\n              name=\"jobAdvertisementLink\"\r\n              value={this.state.jobAdvertisementLink}\r\n              onChange={this.handleChange}\r\n              type=\"text\"\r\n              placeholder=\"Strona internetowa\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Data wysłania zapytania{\" \"}\r\n            <input\r\n              name=\"queryDate\"\r\n              value={this.state.queryDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Data wysłania CV{\" \"}\r\n            <input\r\n              name=\"CVDate\"\r\n              value={this.state.CVDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>{\" \"}\r\n          <label>\r\n            Uwagi{\" \"}\r\n            <textarea\r\n              name=\"notices\"\r\n              value={this.state.notices}\r\n              onChange={this.handleChange}\r\n            />{\" \"}\r\n          </label>{\" \"}\r\n          <button type=\"submit\">Edytuj firmę </button>{\" \"}\r\n        </form>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Edit;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Edit from \"./Edit\";\r\nimport \"./mainTable.css\";\r\n\r\nclass MainTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: props.text\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data.map((offer, i) => (\r\n      <div\r\n        className=\"row\"\r\n        data-aos=\"flip-left\"\r\n        data-aos-easing=\"ease-out-cubic\"\r\n        data-aos-delay=\"500\"\r\n        data-aos-once=\"true\"\r\n        data-aos-offset=\"0\"\r\n        key={i}\r\n      >\r\n        <div>{offer.firm}</div>\r\n        <div>\r\n          <a href={offer.www} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            {offer.www}\r\n          </a>\r\n        </div>\r\n        <div>e-mail</div>\r\n        <div>{offer.queryDate}</div>\r\n        <div>{offer.CVDate}</div>\r\n        <div>\r\n          <button onClick={() => this.props.handleRemoveButton(i)}>Usuń</button>\r\n        </div>\r\n        <div>\r\n          {/* <button onClick={() => this.props.handleEditButton(i)}>Edytuj</button> */}\r\n\r\n          <Link to={`/edit/${i}`}>edycja</Link>\r\n        </div>\r\n        <div>\r\n          <Link to={`/update/${i}`}>aktualizacja</Link>\r\n        </div>\r\n      </div>\r\n    ));\r\n    return (\r\n      <div className=\"mainTable\" data-aos=\"fade-up\">\r\n        <h2> Lista ofert </h2>{\" \"}\r\n        <div className=\"offerList\">\r\n          <div className=\"row title\">\r\n            <div>Nazwa Firmy</div>\r\n            <div>Strona WWW</div>\r\n            <div>E-mail</div>\r\n            <div>Zapytanie</div>\r\n            <div>CV</div>\r\n          </div>\r\n          {data}{\" \"}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainTable;\r\n","import React, {\r\n  Component\r\n} from \"react\";\r\nimport {\r\n  NavLink\r\n} from \"react-router-dom\";\r\nimport \"./navigation.css\";\r\n\r\nconst Navigtation = () => {\r\n  return ( <\r\n    header >\r\n    <\r\n    h4 > Nazwa aplikacji < /h4>\r\n\r\n    <\r\n    NavLink to = \"/\" > Strona główna < /NavLink> <\r\n    NavLink to = \"/add\" > Dodaj firmę < /NavLink> <\r\n    NavLink to = \"/info\" > Info < /NavLink> <\r\n    NavLink to = \"/stats\" > Statystyka < /NavLink> <\r\n    /header>\r\n  );\r\n};\r\n\r\nexport default Navigtation;","import React, { Component } from \"react\";\r\n\r\nimport \"./update.css\";\r\nclass Update extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.props.state.firmList[this.props.match.params.id];\r\n    if (!this.state.replayDate) {\r\n      this.state.replayDate = \"\";\r\n    }\r\n    if (!this.state.interviewDate) {\r\n      this.state.interviewDate = \"\";\r\n    }\r\n    if (!this.state.recrutationNotices) {\r\n      this.state.recrutationNotices = \"\";\r\n    }\r\n  }\r\n  handleChange = e => {\r\n    if (e.target.type === \"textarea\") {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        [e.target.name]: e.target.value\r\n      });\r\n    }\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.editFirm(this.state, this.props.match.params.id);\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div data-aos=\"zoom-out\">\r\n        <h3>Aktualizacja firmy {this.state.firm}</h3>\r\n        <form className=\"update_firm\" onSubmit={this.handleSubmit}>\r\n          <label>\r\n            Data odpowiedzi\r\n            <input\r\n              name=\"replayDate\"\r\n              value={this.state.replayDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Data rozmowy rekrutacyjnej\r\n            <input\r\n              name=\"interviewDate\"\r\n              value={this.state.interviewDate}\r\n              onChange={this.handleChange}\r\n              type=\"Date\"\r\n            />\r\n          </label>\r\n          <label>\r\n            Uwagi dotyczące rekrutacji\r\n            <textarea\r\n              name=\"recrutationNotices\"\r\n              value={this.state.recrutationNotices}\r\n              onChange={this.handleChange}\r\n            />{\" \"}\r\n          </label>{\" \"}\r\n          <button type=\"submit\">Aktualizuj dane </button>{\" \"}\r\n        </form>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Update;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Stats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firmList: this.props.state.firmList\r\n    };\r\n  }\r\n  render() {\r\n    let all_apl = this.state.firmList.filter(\r\n      item => item.CVDate || item.queryDate\r\n    );\r\n    let response = this.state.firmList.filter(item => item.replayDate);\r\n    let wo = ((response.length / all_apl.length) * 100).toFixed(0);\r\n    let response_effective = this.state.firmList.filter(\r\n      item => item.interviewDate\r\n    );\r\n    let woe = ((response_effective.length / all_apl.length) * 100).toFixed(0);\r\n\r\n    return (\r\n      <div>\r\n        <h1>Wysłano {all_apl.length} aplikacji / zapytań </h1>\r\n        <h2>WO = {wo}%</h2>\r\n        <h2>WOE = {woe}%</h2>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport \"./App.css\";\nimport AddOffer from \"./components/AddOffer\";\nimport MainTable from \"./components/MainTable\";\nimport Navigation from \"./components/Navigation\";\nimport Edit from \"./components/Edit\";\nimport Update from \"./components/Update\";\nimport Stats from \"./components/Stats\";\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\n\nclass App extends Component {\n  state = {\n    formActive: false,\n    firmList: JSON.parse(localStorage.getItem(\"savedFirmList\")) || []\n  };\n\n  // firmList = JSON.parse(localStorage.getItem(\"savedFirmList\")) || [];\n\n  handleButton = () => {\n    this.setState({\n      formActive: !this.state.formActive\n    });\n  };\n  handleEditButton = i => {\n    console.log(i);\n    return (\n      <Switch>\n        <Redirect from=\"/\" to=\"/new-path\" />\n        <Route path=\"/new-path\" component={AddOffer} />{\" \"}\n      </Switch>\n    );\n  };\n  handleRemoveButton = index => {\n    console.log(\"it working\", index, this.state.firmList);\n    const firm = this.state.firmList[index].firm;\n    console.log(firm);\n    if (window.confirm(`czy usunąć firmę \\n${firm}`)) {\n      let firmList = [...this.state.firmList];\n\n      firmList.splice(index, 1);\n      localStorage.setItem(\"savedFirmList\", JSON.stringify(firmList));\n      this.setState({\n        firmList\n      });\n    }\n  };\n\n  writeFirm = data => {\n    let firmList = [...this.state.firmList];\n    firmList.push(data);\n\n    localStorage.setItem(\"savedFirmList\", JSON.stringify(firmList));\n    this.setState({\n      firmList\n    });\n  };\n  editFirm = (data, index) => {\n    let firmList = [...this.state.firmList];\n\n    firmList.splice(index, 1, data);\n\n    localStorage.setItem(\"savedFirmList\", JSON.stringify(firmList));\n    this.setState({\n      firmList\n    });\n  };\n\n  componentDidMount() {\n    AOS.init({\n      duration: 1500\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Navigation />\n          <Route\n            path=\"/\"\n            exact\n            render={() => (\n              <MainTable\n                data={this.state.firmList}\n                handleRemoveButton={this.handleRemoveButton}\n                handleEditButton={this.handleEditButton}\n              />\n            )}\n          />{\" \"}\n          <Route\n            path=\"/add\"\n            exact\n            render={() => <AddOffer writeFirm={this.writeFirm} />}\n          />\n          <Route\n            path=\"/edit/:id\"\n            exact\n            render={props => (\n              <Edit {...props} stateX={this.state} editFirm={this.editFirm} />\n            )}\n          />\n          <Route\n            path=\"/update/:id\"\n            exact\n            render={props => (\n              <Update {...props} state={this.state} editFirm={this.editFirm} />\n            )}\n          />{\" \"}\n          <Route\n            path=\"/stats\"\n            exact\n            render={props => <Stats {...props} state={this.state} />}\n          />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}